#!/bin/bash

# TODO: race-free solution instead of freeport freedisp
# TODO: file bug to openssh: `-f` doesn't work together with `-S`
#       when that is fixed, remove the sleep workarounds
# TODO: alternative to `x11vnc -storepasswd` and copy, it has version incompatibilities
#       somehow non-reproducable?

set -e


USER="hilbsn"
SSHCS="~/.ssh/control:%h:%p:%r"
# needs to be without quotes or else `readlink -f` fails?
LOCALVNCPW=~/.vnc/stud-vnc-passwd
# needs to be with quotes to prevent local tilde expansion
REMOTEVNCPW="~/.vnc/stud-vnc-passwd"

HOST=${USER}@${1}.mathematik.uni-stuttgart.de

freeport () {
  NUM=5900
  while netstat -atn | grep -q :$NUM; do
    ((NUM++))
  done
  echo $NUM
}

freedisp () {
  NUM=1
  while [[ -e /tmp/.X${NUM}-lock ]]; do
    ((NUM++))
  done
  echo :$NUM
}

# generate password token (vnc passwd truncates to 8 chars)
PW=`cat /dev/urandom | base64 | fold -w 8 | head -n 1`
# use local screen size for framebuffer
DISPLAYSIZE=`xdpyinfo | grep -Po '(?<=dimensions:    )\w+'`

# connect and setup ssh master control socket
ssh -C -M -S $SSHCS -fN $HOST

LOCALPORT=$(freeport)
REMOTEPORT=`ssh -S $SSHCS $HOST "$(typeset -f freeport); freeport"`
VNCDISPLAY=`ssh -S $SSHCS $HOST "$(typeset -f freedisp); freedisp"`

echo "setup port forwarding ..."
ssh -S $SSHCS -L $LOCALPORT:localhost:$REMOTEPORT -N $HOST &
sleep 0.2

echo "starting remote Xvfb ..."
ssh -S $SSHCS $HOST "Xvfb $VNCDISPLAY -nolisten tcp -screen 0 ${DISPLAYSIZE}x16" &

echo "preparing password file ..."
# stupid path expansion needed for local and remote
LOCALVNCPW=$(readlink -f $LOCALVNCPW)
REMOTEVNCPW=$(ssh -S $SSHCS $HOST "readlink -f $REMOTEVNCPW && true")
echo -n $(ssh -S $SSHCS $HOST "x11vnc -storepasswd $PW $REMOTEVNCPW && cat $REMOTEVNCPW") > $LOCALVNCPW

echo "starting remote x11vnc ..."
ssh -S $SSHCS $HOST "x11vnc -rfbport $REMOTEPORT -display $VNCDISPLAY -rfbauth $REMOTEVNCPW -localhost -nevershared -ncache 10 -xkb -repeat" &
sleep 1

echo "starting remote display manager ..."
ssh -S $SSHCS $HOST "DISPLAY=$VNCDISPLAY i3" &

echo "starting vncviewer ..."
vncviewer -passwd $LOCALVNCPW localhost:$LOCALPORT

echo "cleaning up ..."
ssh -S $SSHCS $HOST "killall -u $USER Xvfb x11vnc || true"
ssh -S $SSHCS -O exit $HOST

